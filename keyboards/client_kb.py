from aiogram import types

from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, ReplyKeyboardRemove, InlineKeyboardButton, Message, CallbackQuery, FSMContext
from create_bot import dp
from random import randint

# button1 = KeyboardButton('üõçÔ∏è–ö–∞—Ç–∞–ª–æ–≥')
# button2 = KeyboardButton('üß≠–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
# button3 = KeyboardButton('üöö C–ø–æ—Å–æ–±—ã –¥–æ—Å—Ç–∞–≤–∫–∏')
# button4 = KeyboardButton('üí≥ C–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã')

# button1 = KeyboardButton(text="–ö–∞—Ç–∞–ª–æ–≥")
# button2 = KeyboardButton(text='–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
# button3 = KeyboardButton(text='–î–æ—Å—Ç–∞–≤–∫–∞')
# button4 = KeyboardButton(text='–û–ø–ª–∞—Ç–∞')

button1 = "/–ö–∞—Ç–∞–ª–æ–≥"
button2 = '/–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ'
button3 = '/–î–æ—Å—Ç–∞–≤–∫–∞'
button4 = '/–û–ø–ª–∞—Ç–∞'

kb_client = ReplyKeyboardMarkup(row_width=2, resize_keyboard=True, selective= True, one_time_keyboard=True)


kb_client.row(button1, button2).row(button3, button4)

back_message = '‚Üê –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é'
def back_markup():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, selective=True)
    markup.add(back_message)

    return markup

@dp.message_handler(commands="–î–æ—Å—Ç–∞–≤–∫–∞")
async def cmd_samovivoz(message: Message, state: FSMContext):
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton(text="üì¶ –°–∞–º–æ–≤—ã–≤–æ–∑", callback_data="–°–∞–º–æ–≤—ã–≤–æ–∑"))
    keyboard.add(InlineKeyboardButton(text="üöó –ö—É—Ä—å–µ—Ä–æ–º –ø–æ –ú–æ—Å–∫–≤–µ", callback_data="–ö—É—Ä—å–µ—Ä"))
    keyboard.add(InlineKeyboardButton(text="üöö –ó–∞ –ú–ö–ê–î —Å–≤—ã—à–µ 10 –∫–º", callback_data="–ú–ö–ê–î"))
    keyboard.add(InlineKeyboardButton(text="üåç –î—Ä—É–≥–∏–µ —Å—Ç—Ä–∞–Ω—ã", callback_data="–°—Ç—Ä–∞–Ω—ã"))
    await message.answer("‚≠ê –ï—Å–ª–∏ —Å–≤–µ—á–∏ –≤ –Ω–∞–ª–∏—á–∏–∏, –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å.\n‚≠ê‚≠ê –í –ø–µ—Ä–∏–æ–¥ 10-31 –¥–µ–∫–∞–±—Ä—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –º–æ–∂–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å —á–µ—Ä–µ–∑ 3-5 –¥–Ω—è —Å –º–æ–º–µ–Ω—Ç–∞ –æ–ø–ª–∞—Ç—ã.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç ‚Üì", reply_markup=keyboard)

@dp.callback_query_handler(text="–°–∞–º–æ–≤—ã–≤–æ–∑")
async def send_samovivoz(call: CallbackQuery):
    await call.message.answer('–®–æ—É—Ä—É–º SO√õL HYGGE –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ –∞–¥—Ä–µ—Å—É: —É–ª. –°–∞–¥–æ–≤–∞—è-–°—É—Ö–∞—Ä–µ–≤—Å–∫–∞—è 15—Å1 (–ï—Å—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ø–∞—Ä–∫–æ–≤–∫–∞)\n\n–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: –ü–Ω-–í—Å —Å 11.30 –¥–æ 20.30\n\n–ö–∞–∫ –¥–æ–±—Ä–∞—Ç—å—Å—è –ø–æ –Ø–Ω–¥–µ–∫—Å –ö–∞—Ä—Ç–µ: (https://soulhygge.ru/kakdobratsya_showroom)', reply_markup=back_markup())

@dp.callback_query_handler(text="–ö—É—Ä—å–µ—Ä")
async def send_samovivoz(call: CallbackQuery):
    await call.message.answer('–í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: –ü–Ω-–í—Å —Å 11.30 –¥–æ 21.00:\n\n–î–æ—Å—Ç–∞–≤–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –ø–æ –ú–æ—Å–∫–≤–µ –≤–Ω—É—Ç—Ä–∏ –ú–ö–ê–î 2-3 –¥–Ω—è ‚Äî 350 ‚ÇΩ, –∑–∞ –ú–ö–ê–î –¥–æ 10 –∫–º 2-3 –¥–Ω—è ‚Äî 450 ‚ÇΩ', reply_markup=back_markup())

@dp.callback_query_handler(text="–ú–ö–ê–î")
async def send_samovivoz(call: CallbackQuery):
    await call.message.answer('–î–æ—Å—Ç–∞–≤–∫–∞ –∑–∞ –ú–ö–ê–î —Å–≤—ã—à–µ 10–∫–º –∏ –ø–æ –†–æ—Å—Å–∏–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–µ–π –°–î–≠–ö - 450‚ÇΩ –æ—Ç 2 –¥–æ 16 –¥–Ω–µ–π\n\n–î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –†–§ –ü–æ—á—Ç–æ–π –†–æ—Å—Å–∏–∏ - —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ', reply_markup=back_markup())

@dp.callback_query_handler(text="–°—Ç—Ä–∞–Ω—ã")
async def send_samovivoz(call: CallbackQuery):
    await call.message.answer('–†–∞—Å—á—ë—Ç –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ –¥—Ä—É–≥–∏–µ —Å—Ç—Ä–∞–Ω—ã –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –Ω–∞ —Å–∞–π—Ç–µ –ü–æ—á—Ç–∞ –†–æ—Å—Å–∏–∏: https://www.pochta.ru/parcels\n\n–î–æ—Å—Ç–∞–≤–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –æ—Ç 7 –¥–æ 22 –¥–Ω–µ–π', reply_markup=back_markup())

@dp.message_handler(commands="–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ")
async def cmd_points(message: Message, state: FSMContext):
    keyboard2 = InlineKeyboardMarkup()
    keyboard2.add(InlineKeyboardButton(text="üìç –ú–æ—Å–∫–≤–∞", callback_data="–ú–æ—Å–∫–≤–∞"))
    keyboard2.add(InlineKeyboardButton(text="üìç –ú—ã—Ç–∏—â–∏", callback_data="–ú—ã—Ç–∏—â–∏"))
    keyboard2.insert(InlineKeyboardButton(text="üìç –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥", callback_data="–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥"))
    keyboard2.add(InlineKeyboardButton(text="üìç –•–∞–±–∞—Ä–æ–≤—Å–∫", callback_data="–•–∞–±–∞—Ä–æ–≤—Å–∫"))
    keyboard2.insert(InlineKeyboardButton(text="üìç –¢–æ–ª—å—è—Ç—Ç–∏", callback_data="–¢–æ–ª—å—è—Ç—Ç–∏"))
    keyboard2.add(InlineKeyboardButton(text="üìç –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω", callback_data="–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω"))
    keyboard2.insert(InlineKeyboardButton(text="üìç –ò—Ä–∫—É—Ç—Å–∫", callback_data="–ò—Ä–∫—É—Ç—Å–∫"))
    keyboard2.add(InlineKeyboardButton(text="üìç –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥", callback_data="–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥"))
    keyboard2.insert(InlineKeyboardButton(text="üìç –Ø–∫—É—Ç–∏—è", callback_data="–Ø–∫—É—Ç–∏—è"))
    keyboard2.add(InlineKeyboardButton(text="üìç –ü–µ—Ç—Ä–æ–∑–∞–≤–æ–¥—Å–∫", callback_data="–ü–µ—Ç—Ä–æ–∑–∞–≤–æ–¥—Å–∫"))
    keyboard2.insert(InlineKeyboardButton(text="üìç –£—Å—Å—É—Ä–∏–π—Å–∫", callback_data="–£—Å—Å—É—Ä–∏–π—Å–∫"))
    await message.answer("–í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –Ω–∞—à–∏ —Ç–æ—á–∫–∏ –ø—Ä–æ–¥–∞–∂ ", reply_markup=keyboard2)

@dp.callback_query_handler(text="–ú–æ—Å–∫–≤–∞")
async def cmd_points(call: CallbackQuery):
    await call.message.answer('–ó–¥–µ—Å—å –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –∞–¥—Ä–µ—Å–∞ –∏ –∫–∞—Ä—Ç—ã –¥–ª—è –≥. –ú–æ—Å–∫–≤–∞')

@dp.callback_query_handler(text="–ú—ã—Ç–∏—â–∏")
async def cmd_points(call: CallbackQuery):
    await call.message.answer('–ó–¥–µ—Å—å –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –∞–¥—Ä–µ—Å–∞ –∏ –∫–∞—Ä—Ç—ã –¥–ª—è –≥. –ú—ã—Ç–∏—â–∏')

@dp.callback_query_handler(text="–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥")
async def cmd_points(call: CallbackQuery):
    await call.message.answer('–ó–¥–µ—Å—å –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –∞–¥—Ä–µ—Å–∞ –∏ –∫–∞—Ä—Ç—ã –¥–ª—è –≥. –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥')

@dp.callback_query_handler(text="–•–∞–±–∞—Ä–æ–≤—Å–∫")
async def cmd_points(call: CallbackQuery):
    await call.message.answer('–ó–¥–µ—Å—å –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –∞–¥—Ä–µ—Å–∞ –∏ –∫–∞—Ä—Ç—ã –¥–ª—è –≥. –•–∞–±–∞—Ä–æ–≤—Å–∫')

@dp.callback_query_handler(text="–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω")
async def cmd_points(call: CallbackQuery):
    await call.message.answer('–ó–¥–µ—Å—å –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –∞–¥—Ä–µ—Å–∞ –∏ –∫–∞—Ä—Ç—ã –¥–ª—è –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞')

@dp.callback_query_handler(text="–ò—Ä–∫—É—Ç—Å–∫")
async def cmd_points(call: CallbackQuery):
    await call.message.answer('–ó–¥–µ—Å—å –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –∞–¥—Ä–µ—Å–∞ –∏ –∫–∞—Ä—Ç—ã –¥–ª—è –≥. –ò—Ä–∫—É—Ç—Å–∫')

@dp.callback_query_handler(text="–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥")
async def cmd_points(call: CallbackQuery):
    await call.message.answer('–ó–¥–µ—Å—å –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –∞–¥—Ä–µ—Å–∞ –∏ –∫–∞—Ä—Ç—ã –¥–ª—è –≥. –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥')

@dp.callback_query_handler(text="–Ø–∫—É—Ç–∏—è")
async def cmd_points(call: CallbackQuery):
    await call.message.answer('–ó–¥–µ—Å—å –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –∞–¥—Ä–µ—Å–∞ –∏ –∫–∞—Ä—Ç—ã –¥–ª—è –Ø–∫—É—Ç–∏–∏')

@dp.callback_query_handler(text="–ü–µ—Ç—Ä–æ–∑–∞–≤–æ–¥—Å–∫")
async def cmd_points(call: CallbackQuery):
    await call.message.answer('–ó–¥–µ—Å—å –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –∞–¥—Ä–µ—Å–∞ –∏ –∫–∞—Ä—Ç—ã –¥–ª—è –≥. –ü–µ—Ç—Ä–æ–∑–∞–≤–æ–¥—Å–∫')

@dp.callback_query_handler(text="–£—Å—Å—É—Ä–∏–π—Å–∫")
async def cmd_points(call: CallbackQuery):
    await call.message.answer('–ó–¥–µ—Å—å –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –∞–¥—Ä–µ—Å–∞ –∏ –∫–∞—Ä—Ç—ã –¥–ª—è –≥. –£—Å—Å—É—Ä–∏–π—Å–∫')


# @dp.message_handler(commands="–°–∞–º–æ–≤—ã–≤–æ–∑", "–ö—É—Ä—å–µ—Ä–æ–º –ø–æ –ú–æ—Å–∫–≤–µ","–ó–∞ –ú–ö–ê–î —Å–≤—ã—à–µ 10 –∫–º", "–î—Ä—É–≥–∏–µ —Å—Ç—Ä–∞–Ω—ã")
# async def back_button(message: Message): #change foo name to normal
#    keyboard2 = InlineKeyboardMarkup()
#    keyboard2.add(InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="–ù–∞–∑–∞–¥"))
#    await message.answer("–ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥",reply_markup=keyboard2)
# @dp.message_handler(commands="–î–æ—Å—Ç–∞–≤–∫–∞")
# async def cmd_inline_url(message: Message):
#     buttons = [
#         InlineKeyboardButton(text="GitHub", url="https://github.com"),
#         InlineKeyboardButton(text="–û—Ñ. –∫–∞–Ω–∞–ª Telegram", url="tg://resolve?domain=telegram")
#     ]
#     keyboard = InlineKeyboardMarkup(row_width=1)
#     keyboard.add(*buttons)
#     await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ  –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç", reply_markup=keyboard)

del1 = InlineKeyboardButton(text="–°–∞–º–æ–≤—ã–≤–æ–∑", callback_data="–°–∞–º–æ–≤—ã–≤–æ–∑")
del2 = InlineKeyboardButton(text="–î–æ—Å—Ç–∞–≤–∫–∞", callback_data="–î–æ—Å—Ç–∞–≤–∫–∞_–∫—É—Ä—å–µ—Ä–æ–º")
kb_delivery = InlineKeyboardMarkup(row_width=2)
kb_delivery.add(del1, del2)
# # kb_client = ReplyKeyboardMarkup(resize_keyboard=True) # –µ—Å–ª–∏ —Ö–æ—á—É —Å–ø—Ä—è—Ç–∞—Ç—å –∫–Ω–æ–ø–∫–∏ - –∞—Ä–≥—É–º–µ–Ω—Ç one_time_keyboard=True

# –î—Ä—É–≥ –ø–æ–¥ –¥—Ä—É–≥–æ–º
# kb_client.add(button1).add(button2).add(button3)
# button1, –∞ –ø–æ–¥ –Ω–∏–º –≤ –æ–¥–Ω–æ–º —Ä—è–¥—É button2 –∏ button3
# kb_client.add(button1).add(button2).insert(button3)
# –≤—Å–µ –≤ —Ä—è–¥
# kb_client.add(button1).add(button2).add(button3).row(button4, button5)



